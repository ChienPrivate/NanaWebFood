@{
    Layout = "ListProduct";
    var currentPage = ViewData["currentPage"] as int? ?? 1;
    var totalPages = ViewData["totalPages"] as int? ?? 1;
}
@model NanaFoodWeb.Models.Dto.ViewModels.ProductVM
@await Html.PartialAsync("_ShowProduct")
@if(totalPages > 1)
{
    <div class="custom-pagination">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Menu", new { page = currentPage - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (var i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Menu", new { page = i})">
                            @i
                        </a>
                    </li>
                }

                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Menu", new { page = currentPage + 1})" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
    <style>
        .custom-pagination .pagination {
            display: flex;
            justify-content: center;
        }

        .pagination a:hover:not(.active) {
            background-color: #ea700c;
        }

        .pagination a {
            border: 1px solid #ea700c;
        }
    </style>
}