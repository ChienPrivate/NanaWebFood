@using Syncfusion.EJ2
﻿@{
    ViewData["title"] = "View Order";
}
@model IEnumerable<NanaFoodWeb.Models.Order>;
<div style="min-height:70vh">
    <div class="card">
        <div class="card-header">
            <div class="text-center">
                <h2>Đơn hàng của tôi</h2>
            </div>
        </div>
        <div class="card-body">
            <div>
                @Html.EJS().Grid("OrderList").DataSource(Model).Columns(col =>
                         {
                             col.Field("OrderId").HeaderText("Mã đơn hàng").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("PaymentType").HeaderText("Phương thức thanh toán").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("OrderDate").HeaderText("Ngày đặt hàng").Format("dd-MM-yyyy HH:mm:ss").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("PaymentStatus").HeaderText("Trạng thái thanh toán").Width("160").Template("#paymentStatusTemplate").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("OrderStatus").HeaderText("Trạng thái giao hàng").Width("160").Template("#orderStatusTemplate").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("ShipmentFee").HeaderText("Phí ship").Format("#,##" + " VNĐ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("Total").HeaderText("Tổng tiền").Format("#,##" + " VNĐ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                             col.Field("orderCommands").HeaderText("Thao tác").Template("#orderCommandTemplate").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                         }).AllowPaging().PageSettings(page => page.PageCount(3).PageSizes(true).PageSize(10)).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).Toolbar(new List<string>() { "Search" }).AllowResizing(false).AutoFit(false).Render()
            </div>
            <div class="text-right mt-2 g-2">
                <a class="btn btn-outline-warning" asp-action="Menu" asp-controller="Home">Tiếp tục mua <i class="bi bi-basket-fill"></i></a>
                <a asp-action="Index" asp-controller="Home" class="btn btn-outline-secondary">Trở về trang chủ</a>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function paymentStatusDetail(e) {
        var div = document.createElement('div');
        var h6 = document.createElement('h6'); // Tạo thẻ h5 để bọc thẻ span
        var span = document.createElement('span');
        if (e.PaymentStatus === "Chưa thanh toán") {

            span.className = 'p-2 badge bg-primary text-white';
            span.textContent = 'Chưa thanh toán';
        }
        if (e.PaymentStatus === 'Đã thanh toán') {

            span.className = 'p-2 badge bg-success text-white';
            span.textContent = 'Đã thanh toán';
        }
        if (e.PaymentStatus === 'Đã huỷ') {

            span.className = 'p-2 badge bg-danger text-white';
            span.textContent = 'Đã huỷ';
        }

        h6.appendChild(span); // Đưa span vào bên trong thẻ h5
        div.appendChild(h6); // Đưa h6 vào bên trong div

        return div.outerHTML;
    }
</script>

<script type="text/javascript">
    function orderStatusDetail(e) {
        var div = document.createElement('div');
        var h6 = document.createElement('h6'); // Tạo thẻ h5 để bọc thẻ span
        var span = document.createElement('span');
        if (e.OrderStatus === 'Chờ xác nhận') {

            span.className = 'p-2 badge bg-info text-white';
            span.textContent = 'Chờ xác nhận';
        }
        if (e.OrderStatus === 'Đang chuẩn bị') {

            span.className = 'p-2 badge bg-warning text-white';
            span.textContent = 'Đang chuẩn bị';
        }
        if (e.OrderStatus === 'Đã huỷ') {

            span.className = 'p-2 badge bg-danger text-white';
            span.textContent = 'Đã huỷ';
        }
        if (e.OrderStatus === 'Đang giao') {

            span.className = 'p-2 badge bg-primary text-white';
            span.textContent = 'Đang giao';
        }
        if (e.OrderStatus === 'Đã giao'){

            span.className = 'p-2 badge bg-success text-white';
            span.textContent = 'Đã giao'
        }

        h6.appendChild(span); // Đưa span vào bên trong thẻ h5
        div.appendChild(h6); // Đưa h6 vào bên trong div

        return div.outerHTML;
    }
</script>

<script type="text/javascript">
    function ordercommandDetail(e) {
        var btn = document.createElement('a');

        console.log('OrderData:', e);

        if (e.OrderStatus === 'Đã giao' && e.PaymentStatus === 'Đã thanh toán') {
            btn.className = 'btn btn-sm btn-outline-dark me-2';
            btn.textContent = 'Đánh giá';
            btn.setAttribute('href', '/Order/ReviewOrder/?orderId=' + e.OrderId);
        }

        return btn.outerHTML; // Trả về HTML của nút
    }
</script>

<script type="text/x-jsrender" id="orderCommandTemplate">
    <a href="/Order/OrderHistoryDetail/${OrderId}" class="btn btn-sm btn-outline-dark me-2">Xem chi tiết</a>

    ${ordercommandDetail(data)}
</script>

<script type="text/x-jsrender" id="paymentStatusTemplate">
    ${paymentStatusDetail(data)}
</script>

<script type="text/x-jsrender" id="orderStatusTemplate">
    ${orderStatusDetail(data)}
</script>








