@using NanaFoodWeb.Models.Dto
@model NanaFoodWeb.Models.Order
@{
    ViewData["Title"] = "Order Page";
    UserDto userInfo = new UserDto();
    if (ViewBag.UserInfo != null)
    {
        userInfo = ViewBag.UserInfo;
    }
    List<CartResponseDto> cartDetails = new List<CartResponseDto>();
    if (ViewBag.cartdetails != null)
    {
        cartDetails = ViewBag.cartdetails;
    }
    List<CouponDto> coupons = new List<CouponDto>();

    if (ViewBag.couponlist != null)
    {
        coupons = ViewBag.couponlist;
    }
}


<form id="paymentForm" asp-action="Payment" asp-controller="Order" method="post">
    <div class="container">
        <div class="card shadow rounded-3">
            <div class="card-header">
                <h1 style="font-family: 'Roboto', sans-serif;">Thông tin đặt hàng</h1>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 p-4 bg-white border-end border-3">
                        <h2 class="text-lg font-semibold mb-4">Thông tin thanh toán</h2>

                        <div class="mb-3">
                            <label class="form-label">Họ và tên <span class="text-danger">*</span></label>
                            <input type="text" value="@userInfo.FullName" asp-for=FullName name="FullName" class="form-control" placeholder="Họ và tên đầy đủ">
                            <span asp-validation-for=FullName class="text-danger"> @* Thông báo lỗi sẽ xuất hiện ở đây (nếu có) *@ </span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                            <input type="text" value="@userInfo.PhoneNumber" asp-for=PhoneNumber name="PhoneNumber" class="form-control" placeholder="08588xxxxx">
                            <span asp-validation-for=PhoneNumber class="text-danger"> @* Thông báo lỗi sẽ xuất hiện ở đây (nếu có) *@ </span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Email <span class="text-danger">*</span></label>
                            <input type="email" value="@userInfo.Email" asp-for=Email name="Email" class="form-control" placeholder="nhập email của bạn ở đây">
                            <span asp-validation-for=Email class="text-danger"> @* Thông báo lỗi sẽ xuất hiện ở đây (nếu có) *@ </span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Địa chỉ nhận hàng <span class="text-danger">*</span></label>

                            <div class="form-group mt-2 mb-2">
                                <label>Tỉnh/Thành phố: </label>
                                <select id="ProvinceList" name="Province" class="form-select" disabled>
                                    <option value=""> Hãy chọn tỉnh/thành phố </option>
                                    @* @foreach (var item in (List<SelectListItem>)ViewBag.ProvinceList)
                                    {
                                    <option value="@item.Value">@item.Text</option>
                                    } *@
                                    <option selected value="202">Thành phố Hồ Chí Minh</option>
                                </select>
                            </div>

                            <div class="form-group mt-2 mb-2">
                                <label>Quận huyện: </label>
                                <select id="DistrictList" name="District" class="form-select">
                                    <option value="">Hãy chọn quận/huyện</option>
                                </select>
                                <span asp-validation-for="District" id="districtError" name="districtError" class="text-danger"></span>
                            </div>

                            <div class="form-group mt-2 mb-2">
                                <label>Phường xã: </label>
                                <select id="WardList" name="Ward" class="form-select">
                                    <option value="">Hãy chọn phường/xã</option>
                                </select>
                                <span asp-validation-for="Ward" id="wardError" name="wardError" class="text-danger"></span>
                            </div>

                            <div class="form-group mt-2 mb-2">
                                <label>Số nhà và tên đường: </label>
                                <input name="Address" asp-for="Address" class="form-control" placeholder="hãy nhập số nhà và tên đường của bạn ở đây" />
                                <span asp-validation-for=Address class="text-danger"></span>
                            </div>

                            <!-- Dropdown hiển thị dịch vụ -->
                            <div class="form-group mt-2 mb-2" hidden>
                                <label>Dịch vụ: </label>
                                <select id="ServiceList" class="form-select">
                                    <option value=""> Hãy chọn dịch vụ </option>
                                </select>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Lưu ý</label>
                            <textarea name="Note" class="form-control" placeholder="Lưu ý dành cho đơn vị vận chuyển"></textarea>
                            <span class="text-danger"> @* Thông báo lỗi sẽ xuất hiện ở đây (nếu có) *@ </span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Phương thức thanh toán <span class="text-danger">*</span></label>
                            <select name="PaymentType" asp-for=PaymentType class="form-select">
                                <option value="COD">Cash on Delivery</option>
                                <option value="MOMO">Momo</option>
                                <option value="VNPAY">VNpay</option>
                            </select>
                            <span asp-validation-for=PaymentType class="text-danger"> @* Thông báo lỗi sẽ xuất hiện ở đây (nếu có) *@ </span>
                        </div>
                    </div>

                    <div class="col-md-6 p-4 bg-white">
                        <h2 class="text-lg mb-4 text-center">Giỏ hàng</h2>

                        <div class="mb-4">
                            <table class="table text-center">
                                <thead>
                                    <tr>
                                        <th>Tên sản phẩm</th>
                                        <th>Số lượng</th>
                                        <th>Tổng</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in cartDetails)
                                    {
                                        <tr>
                                            <td>@item.ProductName</td>
                                            <td class="text-center">@item.Quantity</td>
                                            <td class="text-center">@item.Total.ToString("#,##")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <hr />
                        <div class="btn-group w-100 coupon-Finder">
                            <input type="text" id="couponInput" class="form-control" placeholder="Nhập mã giảm giá của bạn tại đây" style="width: 379.656px;">
                            <input asp-for=CouponCode id="couponCodeValue" hidden />
                            <button type="button" id="applyCouponbtn" class="btn btn-outline-danger" style="height: 36px; transform: translate(0px, 12px); position: relative; top: -1px;">Áp dụng</button>
                        </div>
                        <hr />
                        <div class="d-flex justify-content-between mt-2 mb-2">
                            <strong>Giảm giá:</strong> <span id="discount">0 VNĐ</span>
                        </div>
                        <div class="d-flex justify-content-between mt-2 mb-2">
                            <strong>Tổng đơn hàng:</strong> <span>@cartDetails.Sum(x => x.Total).ToString("#,##") VNĐ</span>

                        </div>
                        <div class="d-flex justify-content-between mt-2 mb-2">
                            <strong>Phí Ship:</strong> <span id="shippingFee">0 VNĐ</span>
                            <input asp-for=ShipmentFee id="shipmentFeeInput" hidden />
                        </div>
                        <div class="d-flex justify-content-between mt-2 mb-2">
                            <strong>Thời gian giao hàng dự kiến:</strong> <span id="estimatedDeliveryTime"></span>
                            <input asp-for=ExpectedDeliveryDate id="estimatedDeliveryTimeInput" hidden />
                        </div>
                        <div class="d-flex justify-content-between mt-2 mb-2">
                            <strong>Tổng thanh toán:</strong> <span id="totalPay">@cartDetails.Sum(x => x.Total).ToString("#,##") VNĐ</span>
                            <input name="total" id="orderTotal" hidden />
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Thanh toán</button>

                        <button type="button" class="btn btn-success w-100 mt-2" data-bs-toggle="modal" data-bs-target="#couponModal">
                                Xem mã giảm giá
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- The Modal -->
    <div class="modal" id="couponModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Mã giảm giá</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    @if (coupons.Count > 0)
                    {
                        <div class="row">
                            @foreach (var item in coupons)
                            {
                                <div class="col-md-6">
                                    <div class="card border-warning mb-4">
                                        <div class="card-header bg-warning text-center">
                                            <h5 class=" text-dark"> Mã Giảm Giá: @item.CouponCode</h5>
                                        </div>
                                        <div class="card-body text-center">
                                            <p class="card-text">
                                                Giảm @item.Discount.ToString("#,##") đ cho đơn hàng từ @item.MinAmount.ToString("#,##") đ trở lên.
                                            </p>
                                            <p>Hạn sử dụng: @item.EndStart.ToString("dd/MM/yyyy ")</p>
                                            <button type="button" id="btncopy-@item.CouponCode" data-code="@item.CouponCode" class="btn btn-warning" onclick="copyCouponCode(this)"><i class="fas fa-copy"></i> Sao chép mã</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <div class="mb-2">
                                <img src="https://cdn-ilbhegb.nitrocdn.com/pgAEPFEvxkLRtRpysBFHMeRzffWoPlqR/assets/images/optimized/rev-32de2e1/www.contentformula.com/wp-content/uploads/2020/08/Bot_form-8.png" style="max-width: 100%; height: 48vh;" alt="Bot Responsive" />
                            </div>
                            <h4>Hiện Nana đang cập nhật chương trình khuyến mãi, hãy qua lại sau nhé</h4>
                        </div>
                    }


                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Đóng</button>
                </div>

            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="notification" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-center" id="quantityLimitModalLabel">Thông báo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>

</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        function copyCouponCode(button) {
            // Lấy mã giảm giá từ thuộc tính data-code
            const couponCode = button.getAttribute('data-code');

            // Tạo một input tạm thời để sao chép
            const tempInput = document.createElement('input');
            tempInput.value = couponCode;
            document.body.appendChild(tempInput);

            // Chọn và sao chép giá trị trong input
            tempInput.select();
            tempInput.setSelectionRange(0, 99999); // Dành cho mobile
            document.execCommand('copy');

            // Xóa input tạm thời
            document.body.removeChild(tempInput);

            // Hiển thị thông báo bằng toastr
            toastr.success(`Đã sao chép mã: ${couponCode}`, 'Lấy mã thành công');
        }
    </script>
    <script defer>
            $(document).ready(function () {
                // Lắng nghe sự kiện khi thay đổi tỉnh/thành phố
                var defaultProvinceId = 202; // Đặt giá trị mặc định cho provinceId

                // Hàm lấy danh sách quận/huyện dựa trên provinceId
        function loadDistricts(provinceId) {
            if (provinceId) {
                // Reset các dropdown Phường/Xã, Dịch vụ và phí ship
                $('#DistrictList').empty().append('<option value=""> Hãy chọn quận/huyện </option>');
                $('#WardList').empty().append('<option value=""> Hãy chọn phường/xã </option>');
                $('#ServiceList').empty().append('<option value=""> Hãy chọn dịch vụ </option>');

                // Gửi yêu cầu AJAX để lấy danh sách quận/huyện
                $.ajax({
                    url: '@Url.Action("GetDistricts", "Order")',
                    type: 'GET',
                    data: { provinceId: provinceId },
                    success: function (data) {
                        $('#DistrictList').empty().append('<option value=""> Hãy chọn quận/huyện </option>');
                        $.each(data, function (i, district) {
                            $('#DistrictList').append('<option value="' + district.value + '">' + district.text + '</option>');
                        });
                    },
                    error: function () {
                        alert("Không thể lấy danh sách quận/huyện");
                    }
                });
            } else {
                // Reset danh sách quận/huyện, phường/xã, dịch vụ và phí ship nếu không chọn tỉnh/thành phố
                $('#DistrictList').empty().append('<option value=""> Hãy chọn quận/huyện </option>');
                $('#WardList').empty().append('<option value=""> Hãy chọn phường/xã </option>');
                $('#ServiceList').empty().append('<option value=""> Hãy chọn dịch vụ </option>');
            }
        }

        // Gọi hàm loadDistricts với defaultProvinceId khi trang vừa tải
        loadDistricts(defaultProvinceId);


                $('#ProvinceList').change(function () {
                    var provinceId = $(this).val(); // Lấy giá trị ProvinceID

                    if (provinceId) {
                        // Reset các dropdown Phường/Xã, Dịch vụ và phí ship
                        $('#DistrictList').empty().append('<option value=""> Hãy chọn quận/huyện </option>');
                        $('#WardList').empty().append('<option value=""> Hãy chọn phường/xã </option>');
                        $('#ServiceList').empty().append('<option value=""> Hãy chọn dịch vụ </option>');

                        // Gửi yêu cầu AJAX để lấy danh sách quận/huyện
                        $.ajax({
                            url: '@Url.Action("GetDistricts", "Order")',
                            type: 'GET',
                            data: { provinceId: provinceId },
                            success: function (data) {
                                $('#DistrictList').empty().append('<option value=""> Hãy chọn quận/huyện </option>');
                                $.each(data, function (i, district) {
                                    $('#DistrictList').append('<option value="' + district.value + '">' + district.text + '</option>');
                                });
                            },
                            error: function () {
                                alert("Không thể lấy danh sách quận/huyện");
                            }
                        });
                    } else {
                        // Reset danh sách quận/huyện, phường/xã, dịch vụ và phí ship nếu không chọn tỉnh/thành phố
                        $('#DistrictList').empty().append('<option value=""> Hãy chọn quận/huyện </option>');
                        $('#WardList').empty().append('<option value=""> Hãy chọn phường/xã </option>');
                        $('#ServiceList').empty().append('<option value=""> Hãy chọn dịch vụ </option>');
                    }
                });

                // Lắng nghe sự kiện khi thay đổi quận/huyện
                $('#DistrictList').change(function () {
                    var districtId = $(this).val(); // Lấy giá trị DistrictID

                    // Reset phí ship về 0 VNĐ mỗi khi thay đổi quận/huyện
                    $('#shippingFee').text('0 VNĐ');
                    $('#shipmentFeeInput').val(0);

                    if (districtId) {
                        // Reset dropdown Phường/Xã và Dịch vụ
                        $('#WardList').empty();
                        $('#WardList').append('<option value=""> Hãy chọn phường/xã </option>');

                        $('#ServiceList').empty();
                        $('#ServiceList').append('<option value=""> Hãy chọn dịch vụ </option>');

                        // Gửi yêu cầu AJAX để lấy danh sách phường/xã
                        $.ajax({
                            url: '@Url.Action("GetWards", "Order")',
                            type: 'GET',
                            data: { districtId: districtId },
                            success: function (data) {
                                $('#WardList').empty();
                                $('#WardList').append('<option value=""> Hãy chọn phường/xã </option>');
                                $.each(data, function (i, ward) {
                                    $('#WardList').append('<option value="' + ward.value + '">' + ward.text + '</option>');
                                });
                            },
                            error: function () {
                                alert("Không thể lấy danh sách phường/xã");
                            }
                        });

                        // Gửi yêu cầu AJAX để lấy danh sách dịch vụ
                        $.ajax({
                            url: '@Url.Action("GetAvailableService", "Order")', // Action để lấy danh sách dịch vụ
                            type: 'GET',
                            data: { fromDistrict: 1454, toDistrict: districtId }, // Gửi từ quận 12 đến quận người dùng chọn
                            success: function (data) {
                                $('#ServiceList').empty();
                                $('#ServiceList').append('<option value=""> Hãy chọn dịch vụ </option>');
                                $.each(data, function (i, service) {
                                    $('#ServiceList').append('<option value="' + service.value + '">' + service.text + '</option>');
                                });

                                // Tự động chọn dịch vụ đầu tiên
                                if (data.length > 0) {
                                    $('#ServiceList').val(data[0].value);
                                }
                            },
                            error: function () {
                                alert("Không thể lấy danh sách dịch vụ");
                            }
                        });

                    } else {
                        $('#WardList').empty();
                        $('#WardList').append('<option value=""> Hãy chọn phường/xã </option>');
                        $('#ServiceList').empty();
                        $('#ServiceList').append('<option value=""> Hãy chọn dịch vụ </option>');
                    }
                });

                // Lắng nghe sự kiện khi thay đổi phường/xã và lấy dịch vụ
                $('#WardList').change(function () {
                    var wardId = $(this).val(); // Lấy giá trị WardID
                    var toDistrict = $('#DistrictList').val(); // Lấy giá trị quận huyện
                    $('#shippingFee').text('0 VNĐ');
                    $('#shipmentFeeInput').val(0);


                    if (toDistrict) {
                        // Gửi yêu cầu AJAX để lấy dịch vụ
                        $.ajax({
                            url: '@Url.Action("GetAvailableService", "Order")',
                            type: 'GET',
                            data: { fromDistrict: 1454, toDistrict: toDistrict }, // Gửi từ quận 12 đến quận người dùng chọn
                            success: function (data) {
                                $('#ServiceList').empty();
                                $('#ServiceList').append('<option value=""> Hãy chọn dịch vụ </option>');
                                $.each(data, function (i, service) {
                                    $('#ServiceList').append('<option value="' + service.value + '">' + service.text + '</option>');
                                });

                                // Tự động chọn dịch vụ đầu tiên
                                if (data.length > 0) {
                                    $('#ServiceList').val(data[0].value);
                                }
                            },
                            error: function () {
                                alert("Không thể lấy danh sách dịch vụ");
                            }
                        });
                    } else {
                        $('#ServiceList').empty();
                        $('#ServiceList').append('<option value=""> Hãy chọn dịch vụ </option>');
                    }
                });

                // Khi thay đổi phường/xã và dịch vụ, gửi yêu cầu tính phí ship
                $('#WardList, #ServiceList').change(function () {
                    var wardCode = $('#WardList').val();
                    var toDistrictId = $('#DistrictList').val();
                    var serviceId = $('#ServiceList').val();

                    if (wardCode && toDistrictId && serviceId) {
                        // Gọi AJAX để tính phí vận chuyển
                        $.ajax({
                            url: '@Url.Action("CalculateShippingFee", "Order")', // Gọi đến action
                            type: 'POST',
                            data: {
                                serviceId: serviceId,      // ID của dịch vụ đã chọn
                                toDistrictId: toDistrictId, // ID quận được chọn
                                wardCode: wardCode         // Mã phường được chọn
                            },
                            success: function (response) {
                                // Hiển thị phí ship ở phần tử #shippingFee
                                var shippingFee = response.data;
                                var roundedShippingFee = Math.round(shippingFee / 1000) * 1000;
                                var formattedFee = roundedShippingFee.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","); // Thêm dấu phẩy vào các số hàng nghìn
                                $('#shippingFee').text(formattedFee + ' VNĐ'); // Hiển thị phí ship
                            },
                            error: function () {
                                alert("Không thể tính phí ship");
                            }
                        });

                        // Gọi AJAX để tính thời gian giao hàng dự kiến
                        $.ajax({
                            url: '@Url.Action("CalculateShippingTime", "Order")', // Gọi đến action
                            type: 'POST',
                            data: {
                                serviceId: serviceId,      // ID của dịch vụ đã chọn
                                toDistrict: toDistrictId,  // ID quận được chọn
                                toWardCode: wardCode       // Mã phường được chọn
                            },
                            success: function (response) {
                                // Xóa nội dung cũ trước khi hiển thị thời gian mới
                                $('#estimatedDeliveryTime').empty();
                                // Cập nhật thời gian giao hàng mới
                                var leadTime = response.formattedLeadTime;
                                $('#estimatedDeliveryTime').text(leadTime); // Cập nhật thời gian mới lên #estimatedDeliveryTime

                                // Truyền giá trị vào input ẩn #estimatedDeliveryTimeInput
                                $('#estimatedDeliveryTimeInput').val(leadTime);

                            },
                            error: function () {
                                alert("Không thể lấy thời gian giao hàng dự kiến.");
                            }
                        });
                    }
                });

            var originalOrderTotal = parseFloat($('#totalPay').text().replace(/,| VNĐ/g, '')) || 0; // Tổng tiền gốc
            var discount = 0; // Biến lưu giá trị giảm giá
            var discountedTotal = originalOrderTotal; // Tổng tiền sau khi giảm giá
            var couponApplied = false; // Trạng thái mã giảm giá đã được áp dụng

            $('#applyCouponbtn').click(function () {
    var code = $('#couponInput').val().trim(); // Lấy giá trị của coupon và xóa khoảng trắng hai đầu

    // Kiểm tra nếu ô nhập mã giảm giá trống
    if (!couponApplied && code === "") {
        showNotification('Hãy nhập mã giảm giá của bạn.'); // Hiển thị thông báo nếu ô trống
        return; // Dừng lại nếu mã trống
    }

    if (!couponApplied) {
        // Nếu mã giảm giá chưa được áp dụng
        $.ajax({
            url: '/Order/ApplyCoupon',
            type: 'POST',
            data: { code: code },
            success: function (response) {
                // Kiểm tra nếu tổng đơn hàng nhỏ hơn giá trị tối thiểu của mã giảm giá
                if (response.minAmount > @cartDetails.Sum(x => x.Total)) {
                    const formattedAmount = formatCurrencyVND(response.minAmount); // Định dạng số thành VNĐ
                    showNotification(`Tổng đơn hàng phải lớn hơn ${formattedAmount}`);
                    $('#couponInput').val(''); // Xóa nội dung của ô nhập mã giảm giá
                    return;
                }

                if (response.couponCode) {
                    // Kiểm tra nếu coupon đã hết hạn
                    var endDate = new Date(response.endStart);
                    var now = new Date();
                    if (endDate < now) {
                        showNotification('Mã giảm giá đã hết hạn.');
                        $('#couponInput').val(''); // Xóa nội dung của ô nhập mã giảm giá
                        return;
                    }

                    // Kiểm tra nếu coupon đã hết lượt sử dụng
                    if (response.maxUsage <= 0) {
                        showNotification('Mã giảm giá đã hết lượt sử dụng.');
                        $('#couponInput').val(''); // Xóa nội dung của ô nhập mã giảm giá
                        return;
                    }

                    // Áp dụng giảm giá nếu hợp lệ và lưu lại giá trị giảm giá
                    discount = parseFloat(response.discount) || 0;
                    discountedTotal = originalOrderTotal - discount; // Cập nhật tổng sau khi giảm giá

                    // Hiển thị giá trị giảm giá và cập nhật tổng thanh toán
                    $('#discount').text(discount.toFixed(0).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + ' VNĐ');
                    var shippingFee = parseFloat($('#shippingFee').text().replace(/,| VNĐ/g, '')) || 0;
                    updateTotalPay(shippingFee); // Cập nhật tổng thanh toán với phí ship hiện tại

                    // Chuyển mã giảm giá vào input ẩn
                    $('#couponCodeValue').val(code);

                    // Đổi nút "Áp dụng" thành "Hủy" và disable input
                    $('#applyCouponbtn').text('Hủy');
                    $('#couponInput').prop('disabled', true);
                    couponApplied = true;
                } else {
                    showNotification('Mã giảm giá không hợp lệ.');
                }
            },
            error: function () {
                showNotification('Đã xảy ra lỗi khi áp dụng mã giảm giá.');
            }
        });
    } else {
        // Nếu mã giảm giá đã được áp dụng, thực hiện hủy
        discount = 0; // Reset giảm giá
        discountedTotal = originalOrderTotal; // Khôi phục tổng thanh toán ban đầu
        $('#discount').text('0 VNĐ'); // Xóa hiển thị giảm giá
        var shippingFee = parseFloat($('#shippingFee').text().replace(/,| VNĐ/g, '')) || 0;
        updateTotalPay(shippingFee); // Cập nhật lại tổng thanh toán với phí ship hiện tại

        // Xóa mã giảm giá khỏi input ẩn và clear input hiển thị
        $('#couponCodeValue').val('');
        $('#couponInput').val('').prop('disabled', false);

        // Đổi nút "Hủy" trở lại thành "Áp dụng"
        $('#applyCouponbtn').text('Áp dụng');
        couponApplied = false;
    }
});

            function updateTotalPay(shippingFee) {
                var currentTotal = discountedTotal + shippingFee;

                // Định dạng lại và cập nhật tổng thanh toán hiển thị
                var formattedFee = currentTotal.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $('#totalPay').text(formattedFee + ' VNĐ');

                // Cập nhật giá trị cho input ẩn #orderTotal
                $('#orderTotal').val(currentTotal);

                // Cập nhật giá trị cho input ẩn #shipmentFeeInput để truyền khi submit
                $('#shipmentFeeInput').val(shippingFee);
            }


            // Theo dõi thay đổi của phí vận chuyển
            let previousShippingFee = 0;
            const observer = new MutationObserver(() => {
                var ship = parseFloat($('#shippingFee').text().replace(/,| VNĐ/g, '')) || 0;
                updateTotalPay(ship); // Cập nhật tổng thanh toán với phí ship hiện tại
                previousShippingFee = ship;
            });

            observer.observe(document.getElementById('shippingFee'), { childList: true });
        });

        function formatCurrencyVND(amount) {
            return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + ' VNĐ';
        }

        // Hàm hiển thị modal thông báo
        function showNotification(message) {
            console.log($.fn.modal); // Kiểm tra phương thức .modal()
            console.log(typeof bootstrap); // Kiểm tra bootstrap API (Bootstrap 5)
            // Tạo instance modal
            var notificationModal = new bootstrap.Modal(document.getElementById('notification'));
            document.querySelector('#notification .modal-body').textContent = message; // Cập nhật nội dung
            notificationModal.show(); // Hiển thị modal
        }
    </script>
    <script>
        $(document).ready(function () {
            $('button[type="submit"]').click(function (e) {
                e.preventDefault(); // Ngăn form gửi ngay lập tức

                // Làm mới các biến lỗi trong mỗi lần submit
                var districtError = $('#districtError').text().trim().length > 0;
                var wardError = $('#wardError').text().trim().length > 0;
                var hasErrors = districtError || wardError; // Cập nhật điều kiện lỗi mỗi lần nhấn nút

                // Lấy giá trị từ các trường input và dropdown
                var address = $('input[name="Address"]').val();
                var wardText = $('#WardList option:selected').text();
                var districtText = $('#DistrictList option:selected').text();
                var provinceText = $('#ProvinceList option:selected').text() || ''; // Nếu không có ProvinceList, set chuỗi rỗng
                const district = $('#DistrictList').val();
                const ward = $('#WardList').val();

                console.log("Address:", address);
                console.log("Ward Text:", wardText);
                console.log("District Text:", districtText);
                console.log("Province Text:", provinceText);
                console.log("Selected District Value:", district);
                console.log("Selected Ward Value:", ward);
                console.log("District Error:", districtError);
                console.log("Ward Error:", wardError);
                console.log("Has Errors:", hasErrors);

                // Kiểm tra nếu không có lỗi và các giá trị district và ward đã được chọn
                if (!hasErrors && district && ward) {
                    // Tạo chuỗi mới cho Address
                    var fullAddress = `${address}, ${wardText}, ${districtText}, ${provinceText}`.trim();

                    // Gán lại giá trị mới cho ô input Address
                    console.log("Full Address Created:", fullAddress);
                    $('input[name="Address"]').val(fullAddress);
                } else {
                    // Hiển thị thông báo lỗi nếu có
                    if (!district) $('#districtError').text("Vui lòng chọn quận/huyện.");
                    if (!ward) $('#wardError').text("Vui lòng chọn phường/xã.");
                }

                // Sau khi cập nhật giá trị, submit form nếu không có lỗi
                if (!hasErrors) {
                    $(this).closest('form').submit();
                }
            });

            // Xóa thông báo lỗi khi người dùng thay đổi lựa chọn
            $('#DistrictList').change(function () {
                $('#districtError').text("");
            });

            $('#WardList').change(function () {
                $('#wardError').text("");
            });
        });

    </script>
}
