@using Newtonsoft.Json
@using Syncfusion.EJ2
@using System.Security.Claims
@{
    Layout = "_AdminLayout";
    var role = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role).Value ?? "Guess";
}
<style>
    /* Toast Header Thành Công */
    .toast-header-success {
        background-color: #d1e7dd; /* Nền xanh nhạt */
        color: #0f5132; /* Chữ xanh đậm */
        border-bottom: 1px solid #badbcc; /* Viền dưới */
        font-weight: bold; /* In đậm tiêu đề */
    }

    /* Toast Body Thành Công */
    .toast-body-success {
        background-color: #0f5132; /* Nền xanh đậm */
        color: #ffffff; /* Chữ trắng */
        border-top: 1px solid #badbcc; /* Viền trên */
        padding: 0.75rem 1rem; /* Khoảng cách trong */
    }

    /* Toast Header Lỗi */
    .toast-header-error {
        background-color: #f8d7da; /* Nền đỏ nhạt */
        color: #842029; /* Chữ đỏ đậm */
        border-bottom: 1px solid #f5c2c7; /* Viền đỏ nhạt */
        font-weight: bold; /* In đậm tiêu đề */
    }

    /* Toast Body Lỗi */
    .toast-body-error {
        background-color: #842029; /* Nền đỏ đậm */
        color: #ffffff; /* Chữ trắng */
        border-top: 1px solid #f5c2c7; /* Viền trên */
        padding: 0.75rem 1rem; /* Khoảng cách trong */
    }

    /* Nút đóng */
    .btn-close-white {
        color: #0f5132; /* Màu nút đóng */
    }
</style>
<script type="text/javascript">

    function showToast(message, type = 'success') {
        // Tạo container chính cho toast nếu chưa tồn tại
        let toastContainer = document.getElementById('toastContainer');
        if (!toastContainer) {
            toastContainer = document.createElement('div');
            toastContainer.id = 'toastContainer';
            toastContainer.className = 'position-fixed';
            toastContainer.style.zIndex = 1055;
            toastContainer.style.top = '2%'; // Thay đổi style top
            toastContainer.style.right = '1%'; // Thay đổi style right
            document.body.appendChild(toastContainer);
        }

        // Tạo toast element
        const toast = document.createElement('div');
        toast.className = `toast text-bg-${type === 'success' ? 'success' : 'danger'} border-0`;
        toast.setAttribute('role', 'alert');
        toast.setAttribute('aria-live', 'assertive');
        toast.setAttribute('aria-atomic', 'true');

        // Nội dung của toast
        toast.innerHTML = `
                <div class="toast-header ${type === 'success' ? 'toast-header-success' : 'toast-header-error'}">
                    <i class="bi ${type === 'success' ? 'bi-check-circle-fill' : 'bi-exclamation-circle-fill'} me-2"></i>
                    <strong class="me-auto">${type === 'success' ? 'Thành công' : 'Lỗi'}</strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body ${type === 'success' ? 'toast-body-success' : 'toast-body-error'}">
                    ${message}
                </div>
            `;

        // Thêm toast vào container
        toastContainer.appendChild(toast);

        // Hiển thị toast
        const bootstrapToast = new bootstrap.Toast(toast, { delay: 2000 });
        bootstrapToast.show();

        // Tự động xóa toast sau khi ẩn
        toast.addEventListener('hidden.bs.toast', () => {
            toast.remove();
        });
    }

    function refreshGridWithNewData(gridId, newData, templateId) {
        var gridElement = document.getElementById(gridId);
        var gridInstance = gridElement.ej2_instances[0];

        if (gridInstance) {
            newData = Array.isArray(newData) ? newData : [];

            // Kiểm tra và chuyển đổi dữ liệu nếu cần
            newData = newData.map(item => {
                return {
                    OrderId: item.OrderId || item.orderId, // Ánh xạ cả OrderId và orderId
                    FullName: item.FullName || item.fullName,
                    PhoneNumber: item.PhoneNumber || item.phoneNumber,
                    Email: item.Email || item.email,
                    Address: item.Address || item.address,
                    PaymentType: item.PaymentType || item.paymentType,
                    PaymentStatus: item.PaymentStatus || item.paymentStatus,
                    Note: item.Note || item.note,
                    Total: item.Total || item.total
                };
            });

            if(newData == null){
                gridInstance.dataSource = null;
            }
            else{
                gridInstance.dataSource = newData;
            }

            // Nếu dữ liệu không thay đổi, không cần làm mới grid
            if (JSON.stringify(gridInstance.dataSource) !== JSON.stringify(newData)) {
                gridInstance.dataSource = newData; // Gán dữ liệu mới vào grid
                gridInstance.refresh(); // Refresh lại grid
            }

            // gridInstance.dataSource = newData; // Gán dữ liệu đã ánh xạ
            gridInstance.refresh();
        } else {
            console.log(`Grid với ID ${gridId} chưa được khởi tạo.`);
        }
    }

    function updateGridFromServer(gridId, apiUrl, templateId) {
        $.ajax({
            url: apiUrl,
            type: 'GET',
            success: function (data) {
                refreshGridWithNewData(gridId, data, templateId); // Làm mới Grid với dữ liệu trả về
            },
            error: function () {
                console.error(`Không thể làm mới Grid với ID ${gridId}`);
            }
        });
    }

    

    async function changeStatusToPreparing(orderId) {
        // Gửi yêu cầu Ajax để cập nhật trạng thái đơn hàng
        await $.ajax({
            url: `/ManageOrder/ModifyStatus/${orderId}/Đang chuẩn bị`, // Gọi đến URL của phương thức
            type: 'GET',
            success: function (response) {
                $(`#myModal-${orderId}`).modal('hide');

                showToast("Trạng thái đơn hàng đã được cập nhật thành Đang giao.", "success");

                setTimeout(() => {

                    updateGridFromServer(
                        "ConfirmedYetGrid",
                        '/ManageOrder/GetConfirmedOrders?_=' + new Date().getTime(),
                        "confirmedYetCommandTemplate"
                    );

                    updateGridFromServer(
                        "PreparingGrid",
                        '/ManageOrder/GetPreparingOrders?_=' + new Date().getTime(),
                        "preparingCommandTemplate"
                    );
                }, 1000);
            },
            error: function () {
                $(`#myModal-${orderId}`).modal('hide');

                // Gọi toast lỗi
                showToast("Có lỗi xảy ra khi cập nhật trạng thái đơn hàng.", "error");
            }
        });
    }

    async function changeStatusToDelivering(orderId) {
        // Gửi yêu cầu Ajax để cập nhật trạng thái đơn hàng
        await $.ajax({
            url: `/ManageOrder/ModifyStatus/${orderId}/Đang giao`, // Gọi đến URL của phương thức
            type: 'GET',
            success: function (response) {
                $(`#myModal-${orderId}`).modal('hide');

                showToast("Trạng thái đơn hàng đã được cập nhật thành Đang giao.", "success");

                setTimeout(() => {

                    // Làm mới DeliveringGrid
                    updateGridFromServer(
                        "DeliveringGrid",
                        '/ManageOrder/GetDeliveringOrders?_=' + new Date().getTime(),
                        "deliveringCommandTemplate"
                    ),
                        // Làm mới PreparingGrid
                        updateGridFromServer(
                            "PreparingGrid",
                            '/ManageOrder/GetPreparingOrders?_=' + new Date().getTime(),
                            "preparingCommandTemplate"
                        )
                }, 1000);
                
            },
            error: function () {
                $(`#myModal-${orderId}`).modal('hide');

                // Gọi toast lỗi
                showToast("Có lỗi xảy ra khi cập nhật trạng thái đơn hàng.", "error");
            }
        });
    }

    async function changeStatusToComplete(orderId) {

        await $.ajax({
            url: `/ManageOrder/ModifyStatus/${orderId}/Đã giao`, // Gọi đến URL của phương thức
            type: 'GET',
            success: function (response) {
                $(`#myModal-${orderId}`).modal('hide');

                showToast("Trạng thái đơn hàng đã được cập nhật thành Đã giao.", "success");

                setTimeout(() => {

                    // Làm mới CompleteGrid
                    updateGridFromServer(
                        "CompleteGrid",
                        '/ManageOrder/GetCompleteOrders?_=' + new Date().getTime(),
                        "completeCommandTemplate"
                    );

                    // Làm mới DeliveringGrid
                    updateGridFromServer(
                        "DeliveringGrid",
                        '/ManageOrder/GetDeliveringOrders?_=' + new Date().getTime(),
                        "deliveringCommandTemplate"
                    );

                }, 1000);
            },
            error: function () {
                $(`#myModal-${orderId}`).modal('hide');

                // Gọi toast lỗi
                showToast("Có lỗi xảy ra khi cập nhật trạng thái đơn hàng.", "error");
            }
        });
    }

    // async function changeStatusToCancel(orderId) {
    //     const reasonSelect = document.getElementById(`cancelReason-${orderId}`);
    //     const warningText = document.getElementById(`warningText-${orderId}`);
    //     const reason = reasonSelect ? reasonSelect.value : null;

    //     if (!reason) {
    //         warningText.textContent = "Vui lòng chọn lý do hủy đơn.";
    //         return;
    //     } else {
    //         warningText.textContent = "";
    //     }



    //     await $.ajax({
    //         url: `/ManageOrder/CancelOrder/${orderId}/${encodeURIComponent(reason)}`,
    //         type: 'GET',
    //         success: function () {
    //             $(`#cancelModal-${orderId}`).modal('hide');

    //             showToast("Đơn hàng đã được hủy thành công.", "success");

    //             setTimeout(() => {

    //                 updateGridFromServer("ConfirmedYetGrid", '/ManageOrder/GetConfirmedOrders?_=' + new Date().getTime(), "confirmedYetCommandTemplate");
    //                 updateGridFromServer("PreparingGrid", '/ManageOrder/GetPreparingOrders?_=' + new Date().getTime(), "preparingCommandTemplate");
    //                 updateGridFromServer("DeliveringGrid", '/ManageOrder/GetDeliveringOrders?_=' + new Date().getTime(), "deliveringCommandTemplate");
    //                 updateGridFromServer("CancelGrid", '/ManageOrder/GetCanceledOrders?_=' + new Date().getTime(), "cancelCommandTemplate");
    //             }, 500);
    //         },
    //         error: function () {
    //             $(`#cancelModal-${orderId}`).modal('hide');

    //             Gọi toast lỗi
    //             showToast("Có lỗi xảy ra khi hủy đơn hàng.", "error");
    //         }
    //     });
    // }

</script>

<div class="container-fluid mt-3">
    <h2>Danh sách đơn hàng</h2>
@*     <div class="mt-2 mb-2">
        <a asp-controller="Users" asp-action="Create" class="btn btn-outline-primary"><i class="bi bi-plus-circle"></i> Tạo người dùng mới</a>
    </div> *@
    <br>
    <!-- Nav pills -->
    <ul class="nav nav-pills" role="tablist">
        <li class="nav-item">
            <a id="home-tab" class="nav-link active" data-bs-toggle="pill" href="#home">Chờ xác nhận</a>
        </li>
        <li class="nav-item">
            <a id="menu1-tab" class="nav-link" data-bs-toggle="pill" href="#menu1">Đang chuẩn bị</a>
        </li>
        <li class="nav-item">
            <a id="menu2-tab" class="nav-link" data-bs-toggle="pill" href="#menu2">Đang giao</a>
        </li>
        <li class="nav-item">
            <a id="menu3-tab" class="nav-link" data-bs-toggle="pill" href="#menu3">Hoàn thành</a>
        </li>
        <li class="nav-item">
            <a id="menu4-tab" class="nav-link" data-bs-toggle="pill" href="#menu4">Đã hủy</a>
        </li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div id="home" class="tab-pane active">
            <br>
            <h3>Đơn hàng Chờ xác nhận</h3>
            <div class="col-lg-12 control-section">
                <div>
                    <h1 class="h3 mb-4 text-gray-800"></h1>
                </div>
                <div class="control-wrapper">
                    <div class="control-section">
                        @Html.EJS().Grid("ConfirmedYetGrid").DataSource((IEnumerable<object>)ViewBag.ConfirmedYet).Columns(col =>
                                 {
                                     // col.Field("Select").HeaderText("").Type("Checkbox").Width("50").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("OrderId").HeaderText("Mã đơn hàng").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("FullName").HeaderText("Họ tên").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PhoneNumber").HeaderText("Số điện thoại").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
                                     col.Field("Email").HeaderText("Email").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Address").HeaderText("Địa chỉ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentType").HeaderText("Phương thức thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentStatus").HeaderText("Trạng thai thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Note").HeaderText("Ghi chú").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Total").HeaderText("Tổng tiền").Format("#,##" + " VNĐ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("commands").HeaderText("Thao tác").Template("#confirmedYetCommandTemplate").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                                 }).AllowPaging().PageSettings(page => page.PageCount(3).PageSizes(true).PageSize(10)).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).Toolbar(new List<string>() { "Search" }).AllowResizing(false).AutoFit(false).Render()
                    </div>
                </div>
            </div>
        </div>
        <div id="menu1" class="tab-pane">
            <br>
            <h3>Đơn hàng đang chuẩn bị</h3>
            <div class="col-lg-12 control-section">
                <div>
                    <h1 class="h3 mb-4 text-gray-800"></h1>
                </div>
                <div class="control-wrapper">
                    <div class="control-section">
                        @Html.EJS().Grid("PreparingGrid").DataSource((IEnumerable<object>)ViewBag.Preparing).Columns(col =>
                                 {
                                     col.Field("OrderId").HeaderText("Mã đơn hàng").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("FullName").HeaderText("Họ tên").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PhoneNumber").HeaderText("Số điện thoại").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
                                     col.Field("Email").HeaderText("Email").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Address").HeaderText("Địa chỉ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentType").HeaderText("Phương thức thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentStatus").HeaderText("Trạng thai thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Note").HeaderText("Ghi chú").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Total").HeaderText("Tổng tiền").Format("#,##" + " VNĐ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("commands").HeaderText("Thao tác").Template("#preparingCommandTemplate").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                                 }).AllowPaging().PageSettings(page => page.PageCount(3).PageSizes(true).PageSize(10)).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).Toolbar(new List<string>() { "Search" }).AllowResizing(false).AutoFit(false).Render()
                    </div>
                </div>
            </div>
        </div>
        <div id="menu2" class="tab-pane fade">
            <br>
            <h3>Đang giao</h3>
            <div class="col-lg-12 control-section">
                <div>
                    <h1 class="h3 mb-4 text-gray-800"></h1>
                </div>

                <div class="control-wrapper">
                    <div class="control-section">
                        @Html.EJS().Grid("DeliveringGrid").DataSource((IEnumerable<object>)ViewBag.Delivering).Columns(col =>
                                 {
                                     // col.Field("Id").HeaderText("ID").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).IsPrimaryKey(true).Add();
                                     col.Field("OrderId").HeaderText("Mã đơn hàng").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("FullName").HeaderText("Họ tên").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PhoneNumber").HeaderText("Số điện thoại").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
                                     col.Field("Email").HeaderText("Email").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Address").HeaderText("Địa chỉ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentType").HeaderText("Phương thức thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentStatus").HeaderText("Trạng thai thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Note").HeaderText("Ghi chú").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Total").HeaderText("Tổng tiền").Format("#,##" + " VNĐ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("commands").HeaderText("Thao tác").Template("#deliveringCommandTemplate").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                                 }).AllowPaging().PageSettings(page => page.PageCount(3).PageSizes(true).PageSize(10)).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).Toolbar(new List<string>() { "Search" }).AllowResizing(false).AutoFit(false).Render()
                    </div>
                </div>
            </div>
        </div>
        <div id="menu3" class="tab-pane fade">
            <br>
            <h3>Đã giao</h3>
            <div class="col-lg-12 control-section">
                <div>
                    <h1 class="h3 mb-4 text-gray-800"></h1>
                </div>
                <div class="control-wrapper">
                    <div class="control-section">
                        @Html.EJS().Grid("CompleteGrid").DataSource((IEnumerable<object>)ViewBag.Complete).Columns(col =>
                                 {
                                     // col.Field("Id").HeaderText("ID").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).IsPrimaryKey(true).Add();
                                     col.Field("OrderId").HeaderText("Mã đơn hàng").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("FullName").HeaderText("Họ tên").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PhoneNumber").HeaderText("Số điện thoại").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
                                     col.Field("Email").HeaderText("Email").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Address").HeaderText("Địa chỉ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentType").HeaderText("Phương thức thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentStatus").HeaderText("Trạng thai thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Note").HeaderText("Ghi chú").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Total").HeaderText("Tổng tiền").Format("#,##" + " VNĐ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("commands").HeaderText("Thao tác").Template("#completeCommandTemplate").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                                 }).AllowPaging().PageSettings(page => page.PageCount(3).PageSizes(true).PageSize(10)).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).Toolbar(new List<string>() { "Search" }).AllowResizing(false).AutoFit(false).Render()
                    </div>
                </div>
            </div>
        </div>

        <div id="menu4" class="tab-pane fade">
            <br>
            <h3>Đã hủy</h3>
            <div class="col-lg-12 control-section">
                <div>
                    <h1 class="h3 mb-4 text-gray-800"></h1>
                </div>
                <div class="control-wrapper">
                    <div class="control-section">
                        @Html.EJS().Grid("CancelGrid").DataSource((IEnumerable<object>)ViewBag.CancelOrder).Columns(col =>
                                 {
                                     // col.Field("Id").HeaderText("ID").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).IsPrimaryKey(true).Add();
                                     col.Field("OrderId").HeaderText("Mã đơn hàng").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("FullName").HeaderText("Họ tên").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PhoneNumber").HeaderText("Số điện thoại").Format("C2").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
                                     col.Field("Email").HeaderText("Email").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Address").HeaderText("Địa chỉ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentType").HeaderText("Phương thức thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("PaymentStatus").HeaderText("Trạng thái thanh toán").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("CancelReason").HeaderText("Lý do hủy").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("Total").HeaderText("Tổng tiền").Format("#,##"+" VNĐ").Width("160").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                                     col.Field("commands").HeaderText("Thao tác").Template("#cancelCommandTemplate").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                                 }).AllowPaging().PageSettings(page => page.PageCount(3).PageSizes(true).PageSize(10)).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).Toolbar(new List<string>() { "Search" }).AllowResizing(false).AutoFit(false).Render()
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script id="confirmedYetCommandTemplate" type="text/x-jsrender">
    <a href="/ManageOrder/Details/${OrderId}" class="btn btn-outline-info form-control mb-1 d-block"><i class="bi bi-info-circle"></i> Chi tiết</a>

    <button type="button" class="btn btn-outline-success form-control mb-1 d-block" data-bs-toggle="modal" data-bs-target="#myModal-${OrderId}" data-order-id="${OrderId}">
       <i class="fa-solid fa-phone-volume"></i> Đã xác nhận
    </button>

     <!-- Modal Đang giao cho mỗi OrderId -->
     <div class="modal fade" id="myModal-${OrderId}">
       <div class="modal-dialog">
         <div class="modal-content">
           <div class="modal-header">
             <div class="text-center"><h4 class="modal-title">Xác nhận</h4></div>
             <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
           </div>
           <div class="modal-body">
             Bạn có muốn đổi trạng thái đơn hàng ${OrderId} thành "đang chuẩn bị"?
           </div>
             <div class="modal-footer">
                <div class="d-flex">
                    <a href="javascript:void(0);" id="changeStatusBtn-${OrderId}" class="btn btn-success me-2" data-order-id="${OrderId}" onclick="changeStatusToPreparing(${OrderId})">
                        <i class="fa-solid fa-truck-fast"></i> Chuyển trạng thái: Đang chuẩn bị
                    </a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
         </div>
       </div>
     </div>

     @* <button type="button" class="btn btn-outline-danger form-control mb-1 d-block" data-bs-toggle="modal" data-bs-target="#cancelModal-${OrderId}" data-order-id="${OrderId}">
       <i class="fa-regular fa-file-excel"></i> Hủy đơn
    </button>

    <!-- Modal Hủy Đơn cho mỗi OrderId -->
    <div class="modal fade" id="cancelModal-${OrderId}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận hủy đơn</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-left">
                        <strong>Bạn có chắc muốn hủy đơn này?</strong>
                    </div>
                    <div class="text-left">
                            <label for="cancelReason-${OrderId}">Lý do hủy đơn <span class="text-danger">*</span></label>
                            <select id="cancelReason-${OrderId}" name="message" class="form-select">
                                <option value="">Chọn lý do hủy đơn</option>
                                <option value="Khách đã thay đổi ý định">Khách đã thay đổi ý định</option>
                                <option value="Khách tìm thấy giá tốt hơn ở nơi khác">Khách tìm thấy giá tốt hơn ở nơi khác</option>
                                <option value="Khách đặt nhầm đơn hàng">Khách đặt nhầm đơn hàng</option>
                                <option value="Khách không còn cần sản phẩm">Khách không còn cần sản phẩm</option>
                                <option value="Khách gặp vấn đề với thanh toán">Khách gặp vấn đề với thanh toán</option>
                                <option value="Khách không hài lòng với dịch vụ khách hàng">Khách không hài lòng với dịch vụ khách hàng</option>
                                <option value="Khách yêu cầu hủy vì lý do khác">Khách yêu cầu hủy vì lý do khác</option>
                            </select>
                        <span class="text-danger" id="warningText-${OrderId}"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <a href="javascript:void(0);" id="cancelOrderBtn-${OrderId}" class="btn btn-outline-danger" data-order-id="${OrderId}" onclick="changeStatusToCancel(${OrderId})" >Hủy đơn</a>
                </div>
            </div>
        </div>
    </div> *@
</script>

<script id="preparingCommandTemplate" type="text/x-jsrender">
    <a href="/ManageOrder/Details/${OrderId}" class="btn btn-outline-info form-control mb-1 d-block"><i class="bi bi-info-circle"></i> Chi tiết</a>

    <button type="button" class="btn btn-outline-warning form-control mb-1 d-block" data-bs-toggle="modal" data-bs-target="#myModal-${OrderId}" data-order-id="${OrderId}">
       <i class="fa-solid fa-truck-fast"></i> Đang giao
     </button>

     <!-- Modal Đang giao cho mỗi OrderId -->
     <div class="modal fade" id="myModal-${OrderId}">
       <div class="modal-dialog">
         <div class="modal-content">
           <div class="modal-header">
             <div class="text-center"><h4 class="modal-title">Xác nhận</h4></div>
             <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
           </div>
           <div class="modal-body">
             Bạn có muốn đổi trạng thái đơn hàng ${OrderId} thành "đang giao"?
           </div>
           <div class="modal-footer">
            <div class="d-flex">
                <a href="javascript:void(0);" id="changeStatusBtn-${OrderId}" class="btn btn-success me-2" data-order-id="${OrderId}" onclick="changeStatusToDelivering(${OrderId})">
                    <i class="fa-solid fa-truck-fast"></i> Chuyển trạng thái: Đang giao
                </a>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
         </div>
         </div>
       </div>
     </div>

    @* <button type="button" class="btn btn-outline-danger form-control mb-1 d-block" data-bs-toggle="modal" data-bs-target="#cancelModal-${OrderId}" data-order-id="${OrderId}">
       <i class="fa-regular fa-file-excel"></i> Hủy đơn
    </button>

    <!-- Modal Hủy Đơn cho mỗi OrderId -->
    <div class="modal fade" id="cancelModal-${OrderId}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận hủy đơn</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-left">
                        <strong>Bạn có chắc muốn hủy đơn này?</strong>
                    </div>
                    <div class="text-left">
                            <label for="cancelReason-${OrderId}">Lý do hủy đơn <span class="text-danger">*</span></label>
                            <select id="cancelReason-${OrderId}" name="message" class="form-select">
                                <option value="">Chọn lý do hủy đơn</option>
                                <option value="Khách đã thay đổi ý định">Khách đã thay đổi ý định</option>
                                <option value="Khách tìm thấy giá tốt hơn ở nơi khác">Khách tìm thấy giá tốt hơn ở nơi khác</option>
                                <option value="Khách đặt nhầm đơn hàng">Khách đặt nhầm đơn hàng</option>
                                <option value="Khách không còn cần sản phẩm">Khách không còn cần sản phẩm</option>
                                <option value="Khách gặp vấn đề với thanh toán">Khách gặp vấn đề với thanh toán</option>
                                <option value="Khách không hài lòng với dịch vụ khách hàng">Khách không hài lòng với dịch vụ khách hàng</option>
                                <option value="Khách yêu cầu hủy vì lý do khác">Khách yêu cầu hủy vì lý do khác</option>
                            </select>
                        <span class="text-danger" id="warningText-${OrderId}"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <a href="javascript:void(0);" id="cancelOrderBtn-${OrderId}" class="btn btn-outline-danger" data-order-id="${OrderId}" onclick="changeStatusToCancel(${OrderId})" >Hủy đơn</a>
                </div>
            </div>
        </div>
    </div> *@
</script>

<script id="deliveringCommandTemplate" type="text/x-jsrender">
    <a href="/ManageOrder/Details/${OrderId}" class="btn btn-outline-info form-control mb-1 d-block"><i class="bi bi-info-circle"></i> Chi tiết</a>

    <button type="button" class="btn btn-outline-success form-control mb-1 d-block" data-bs-toggle="modal" data-bs-target="#myModal-${OrderId}" data-order-id="${OrderId}">
       <i class="bi bi-check-circle-fill"></i> Đã giao
     </button>

     <!-- Modal Đang giao cho mỗi OrderId -->
     <div class="modal fade" id="myModal-${OrderId}">
       <div class="modal-dialog">
         <div class="modal-content">
           <div class="modal-header">
             <div class="text-center"><h4 class="modal-title">Xác nhận</h4></div>
             <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
           </div>
           <div class="modal-body">
             Bạn muốn đổi trạng thái đơn hàng ${OrderId} thành "Đã giao"?
           </div>
             <div class="modal-footer">
                <div class="d-flex">
                    <a href="javascript:void(0);" id="changeStatusBtn-${OrderId}" class="btn btn-success me-2" data-order-id="${OrderId}" onclick="changeStatusToComplete(${OrderId})">
                        <i class="fa-solid fa-truck-fast"></i> Chuyển trạng thái: Đã giao
                    </a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
         </div>
       </div>
     </div>

     @* <button type="button" class="btn btn-outline-danger form-control mb-1 d-block" data-bs-toggle="modal" data-bs-target="#cancelModal-${OrderId}" data-order-id="${OrderId}">
       <i class="fa-regular fa-file-excel"></i> Hủy đơn
    </button>

    <!-- Modal Hủy Đơn cho mỗi OrderId -->
    <div class="modal fade" id="cancelModal-${OrderId}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận hủy đơn</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-left">
                        <strong>Bạn có chắc muốn hủy đơn này?</strong>
                    </div>
                    <div class="text-left">
                            <label for="cancelReason-${OrderId}">Lý do hủy đơn <span class="text-danger">*</span></label>
                            <select id="cancelReason-${OrderId}" name="message" class="form-select">
                                <option value="">Chọn lý do hủy đơn</option>
                                <option value="Khách đã thay đổi ý định">Khách đã thay đổi ý định</option>
                                <option value="Khách tìm thấy giá tốt hơn ở nơi khác">Khách tìm thấy giá tốt hơn ở nơi khác</option>
                                <option value="Khách đặt nhầm đơn hàng">Khách đặt nhầm đơn hàng</option>
                                <option value="Khách không còn cần sản phẩm">Khách không còn cần sản phẩm</option>
                                <option value="Khách gặp vấn đề với thanh toán">Khách gặp vấn đề với thanh toán</option>
                                <option value="Khách không hài lòng với dịch vụ khách hàng">Khách không hài lòng với dịch vụ khách hàng</option>
                                <option value="Khách yêu cầu hủy vì lý do khác">Khách yêu cầu hủy vì lý do khác</option>
                            </select>
                        <span class="text-danger" id="warningText-${OrderId}"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <a href="javascript:void(0);" id="cancelOrderBtn-${OrderId}" class="btn btn-outline-danger" data-order-id="${OrderId}" onclick="changeStatusToCancel(${OrderId})" >Hủy đơn</a>
                </div>
            </div>
        </div>
    </div> *@
</script>

<script id="completeCommandTemplate" type="text/x-jsrender">
    <a href="/ManageOrder/Details/${OrderId}" class="btn btn-outline-info"><i class="bi bi-info-circle"></i> Chi tiết</a>
</script>

<script id="cancelCommandTemplate" type="text/x-jsrender">
    <a href="/ManageOrder/Details/${OrderId}" class="btn btn-outline-info"><i class="bi bi-info-circle"></i> Chi tiết</a>
</script>


